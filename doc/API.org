~lsp-mode~ exposes a simple API for connecting and communicating with other
language clients. It also allows the user to add custom handlers for
non-standard notifications from the server.

* Functions
** lsp-define-client /mode language-id type get-root &rest args/
   Define a LSP client for minor mode ~mode~ and language ~language-id~.

~get-root~ is  the function that is called to retrieve the workspace directory
for the current file. It should not take any arguments. [[https://github.com/autozimu/LanguageClient-neovim/blob/fd082232de8b8fbf13d4c4c64c0b43595e9ae7f8/rplugin/python3/LanguageClient/util.py#L15][LanguageClient-neovim]]
provides examples of how this should be done for various languages.

~type~ defines how the Emacs will talk to the language server. Currently, the
only supported mode is '~stdio~.

Other keyword arguments include:

**** ~:name~
     A string that will be used for the name of Language Server process invoked
     by Emacs.
**** ~:command~
     A list starting with the server program name, followed by any arguments to the server.
**** ~:ignore-regexps~
     (Optional) A list of regexp strings. If any output from the server matches any of the regexps, the output will be ignored.

An example of a client for the Go Language Server:
#+BEGIN_SRC emacs-lisp
(lsp-define-client 'go-mode "go" 'stdio #'(lambda () default-directory)
  :command '("go-langserver" "-mode=stdio")
  :name "Go Language Server"
  :ignore-regexps '("^langserver-go: reading on stdin, writing on stdout$"))
#+END_SRC

** lsp-client-on-notification /mode method callback/
   Add a method handler when Emacs get a notification from the language server
   for major-mode MODE.

~mode~ should be a symbol of the major-mode name for the programming language.

~method~ should be a string with the method name.

~callback~ should be a lisp function taking a single argument, the parameters
passed with the notification as a hash table.

* Hooks
** lsp-after-initialize-hook
   A list of functions to be called after a Language Server has been initialized for a new workspace.

** lsp-after-diagnostics-hook
   A list of functions to be called after the Language Server publishes diagnostics for a file.
